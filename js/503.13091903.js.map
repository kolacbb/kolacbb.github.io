{"version":3,"file":"js/503.13091903.js","mappings":"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","sources":["webpack://AppLocalize/./src/views/project/Screenshots.vue","webpack://AppLocalize/./src/components/ScreenCanvas.vue","webpack://AppLocalize/src/components/ScreenCanvas.vue","webpack://AppLocalize/./src/components/ScreenCanvas.vue?b30f","webpack://AppLocalize/./src/components/ScreenCanvas.vue?9521","webpack://AppLocalize/./src/api/screenshot.js","webpack://AppLocalize/src/views/project/Screenshots.vue","webpack://AppLocalize/./src/views/project/Screenshots.vue?ef90","webpack://AppLocalize/./src/views/project/Screenshots.vue?4341"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.isLoading),expression:\"isLoading\"}],staticClass:\"container\"},[_c('div',{staticClass:\"App\"},[_c('el-card',[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"end\",\"align-items\":\"center\"}},[_c('el-select',{attrs:{\"filterable\":\"\"},model:{value:(_vm.languagesSelected),callback:function ($$v) {_vm.languagesSelected=$$v},expression:\"languagesSelected\"}},_vm._l((_vm.languagesOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('el-button',{attrs:{\"loading\":_vm.isUploadLoading,\"type\":\"primary\"},on:{\"click\":_vm.uploadGooglePlay}},[_vm._v(\"Upload to Google Play\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"Add Screenshot\")])],1),_vm._l((_vm.languagesOptions),function(languageItem){return _c('div',[_c('span',{staticStyle:{\"margin\":\"12px\"}},[_vm._v(_vm._s(languageItem.label))]),_c('div',{staticStyle:{\"overflow-x\":\"auto\"}},_vm._l((_vm.pageData),function(item,i){return _c('screen-canvas',{key:i,ref:\"canvasRefs\",refInFor:true,staticStyle:{\"margin\":\"12px\"},attrs:{\"canvas-width\":\"1080\",\"canvas-height\":\"1920\",\"text\":_vm.getLanguageParam(item, languageItem.value),\"background-color\":item.ssBgColor,\"frame-img-url\":\"/frames/google-pixel-4-xl-black.png\",\"screen-url\":item.ssAppUrl}})}),1)])})],2)],1),_c('el-dialog',{attrs:{\"title\":\"Add Screenshot\",\"visible\":_vm.addDialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event}}},[_c('el-form',{ref:\"screenshotFrom\",attrs:{\"model\":_vm.screenshotFrom}},[_c('el-form-item',{attrs:{\"label\":\"String ID\",\"prop\":\"screenshot\"}},[_c('el-input',{model:{value:(_vm.screenshotFrom.transId),callback:function ($$v) {_vm.$set(_vm.screenshotFrom, \"transId\", $$v)},expression:\"screenshotFrom.transId\"}})],1),_c('el-form-item',{attrs:{\"label\":\"Screenshot Url\",\"prop\":\"screenshot\"}},[_c('el-input',{model:{value:(_vm.screenshotFrom.ssAppUrl),callback:function ($$v) {_vm.$set(_vm.screenshotFrom, \"ssAppUrl\", $$v)},expression:\"screenshotFrom.ssAppUrl\"}})],1),_c('el-form-item',{attrs:{\"label\":\"Background Color(eg: #0000000)\",\"prop\":\"screenshot\"}},[_c('el-input',{model:{value:(_vm.screenshotFrom.ssBgColor),callback:function ($$v) {_vm.$set(_vm.screenshotFrom, \"ssBgColor\", $$v)},expression:\"screenshotFrom.ssBgColor\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"Cancel\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handAddScreenshot}},[_vm._v(\"Add\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('canvas',{ref:\"screenCanvas\"},[_vm._v(\"Canvas not supported \"+_vm._s(_vm.refreshCanvas(_vm.text)))])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <canvas ref=\"screenCanvas\">Canvas not supported {{ refreshCanvas(text) }}</canvas>\n\n</template>\n\n<script>\nexport default {\n  props: [\"canvasWidth\", \"canvasHeight\", \"text\", \"backgroundColor\", \"frameImgUrl\", \"screenUrl\"],\n  data() {\n    return {\n    }\n  },\n  methods: {\n    refreshCanvas(data) {\n      // 自定义字体 https://www.zhihu.com/question/496036108\n      const width = this.canvasWidth; const height = this.canvasHeight;\n\n      const canvas = this.$refs.screenCanvas;\n      if (canvas == null) return\n      canvas.setAttribute(\"width\", width + \"\")\n      canvas.setAttribute(\"height\", height + \"\")\n\n\n      canvas.style.width = this.canvasWidth / 4.5  + \"px\";\n      canvas.style.height = this.canvasHeight / 4.5  + \"px\";\n\n      // 不支持canvas\n      if (!canvas.getContext) return\n\n      const ctx2d = canvas.getContext('2d');\n      // 绘制背景颜色\n      ctx2d.fillStyle = this.backgroundColor\n      ctx2d.fillRect(0,0, width, height);\n\n      // 选中的手机边框\n      const phoneFrame = {\n        path: this.frameImgUrl,\n        x: width * 0.05, // 外壳起点\n        y: height * 0.18,\n        width: 1564,\n        height: 3320,\n        startX: 59.4, // 内容起点\n        startY: 191.2,\n        endX: 1501.4, // 内容终点\n        endY: 3232.9,\n        extraY: 1548.8 // 关机按键\n      }\n\n      const phoneFrameToPrevScale = width * 0.9 / phoneFrame.width\n      phoneFrame.width = phoneFrame.width *  phoneFrameToPrevScale\n      phoneFrame.height = phoneFrame.height *  phoneFrameToPrevScale\n      phoneFrame.startX = phoneFrame.x + phoneFrame.startX *  phoneFrameToPrevScale\n      phoneFrame.startY = phoneFrame.y + phoneFrame.startY *  phoneFrameToPrevScale\n      phoneFrame.endX = phoneFrame.x + phoneFrame.endX *  phoneFrameToPrevScale\n      phoneFrame.endY = phoneFrame.y + phoneFrame.endY *  phoneFrameToPrevScale\n\n\n      // 绘制文字\n      const text = this.text.split(\"\\\\n\")\n      ctx2d.beginPath()\n      ctx2d.fillStyle = \"#FFFFFF\"\n      ctx2d.textAlign = \"center\" // \"left\" || \"right\" || \"center\"\n      let upHeight = 64\n      for (let i = 0; i < text.length && i < 2; i++) {\n        ctx2d.font = \"bolder 74px Arial\"\n        ctx2d.fillText(text[i], width / 2, 100 * (i + 1) + upHeight, width - phoneFrame.x);\n      }\n      ctx2d.closePath()\n\n\n      // 绘制手机截图\n      var screenImg = new Image();\n      screenImg.crossOrigin = \"Anonymous\";\n      screenImg.src = this.screenUrl;\n      screenImg.onload = function () {\n        // 手机截图保证内容区拉伸占满\n        const scale = Math.max((phoneFrame.endX - phoneFrame.startX) / this.width, (phoneFrame.endY - phoneFrame.endX) / this.height)\n        // console.log(\"width: \" + (phoneFrame.endX - phoneFrame.startX) / this.width + \" height: \" + this.height + \" scale: \" + scale);\n        ctx2d.drawImage(this, phoneFrame.startX, phoneFrame.startY, this.width * scale, this.height * scale);\n\n\n        // 绘制手机边框\n        let frameImg = new Image();\n        frameImg.src = phoneFrame.path;\n        frameImg.onload = function () {\n          ctx2d.drawImage(this, phoneFrame.x, phoneFrame.y, phoneFrame.width, phoneFrame.height)\n        }\n      }\n\n    },\n    exportImages() {\n      const canvas = this.$refs.screenCanvas;\n      var dataURL = canvas.toDataURL(\"image/png\"); // 将canvas转换为data URL\n      var canvasBlob = this.dataURLtoBlob(dataURL)\n\n      let fileOfBlob = new File([canvasBlob], new Date().getTime() + '.jpg')\n      return fileOfBlob\n    },\n    dataURLtoBlob(dataurl) {\n      var arr = dataurl.split(',')\n      //注意base64的最后面中括号和引号是不转译的\n      var _arr = arr[1].substring(0, arr[1].length - 2)\n      var mime = arr[0].match(/:(.*?);/)[1],\n          bstr = atob(_arr),\n          n = bstr.length,\n          u8arr = new Uint8Array(n)\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n)\n      }\n      return new Blob([u8arr], {\n        type: mime\n      })\n    }\n  },\n  mounted() {\n    this.refreshCanvas()\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScreenCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScreenCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ScreenCanvas.vue?vue&type=template&id=53a56683&\"\nimport script from \"./ScreenCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./ScreenCanvas.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import http from \"@/utils/request\";\n\nexport const getScreenshots = (data) => {\n    return http.post(\"/screenshots/get\", data)\n}\n\nexport const addScreenshots = (data) => {\n    return http.post(\"/screenshots/insert\", data)\n}\n\nexport const updateScreenshots = (data) => {\n    return http.post(\"/screenshots/update\", data)\n}\n\nexport const deleteScreenshots = (data) => {\n    return http.post(\"/screenshots/delete\", data)\n}\n\nexport const uploadGoogle = (data) => {\n    let config = {\n        headers: {\"Content-Type\": \"multipart/form-data\"}\n    }\n    return http.postForm(\"/screenshots/upload\", data, config)\n}","<template>\n  <div class=\"container\" v-loading=\"isLoading\">\n    <div class=\"App\">\n\n      <el-card>\n\n        <div style=\"display: flex; justify-content: end; align-items: center;\">\n\n          <el-select v-model=\"languagesSelected\" filterable>\n            <el-option\n                v-for=\"item in languagesOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n            </el-option>\n          </el-select>\n\n          <el-button @click=\"uploadGooglePlay\" :loading=\"isUploadLoading\" type=\"primary\">Upload to Google Play</el-button>\n          <el-button @click=\"addDialogVisible = true\" type=\"primary\">Add Screenshot</el-button>\n\n        </div>\n\n\n<!--        <el-button @click=\"exportImages\">English</el-button>-->\n        <div v-for=\"languageItem in languagesOptions\">\n          <span style=\"margin: 12px\">{{ languageItem.label }}</span>\n          <div style=\"overflow-x: auto\">\n            <screen-canvas ref=\"canvasRefs\" v-for=\"(item, i) in pageData\" :key=\"i\"\n                           canvas-width=\"1080\" canvas-height=\"1920\"\n                           style=\"margin: 12px\"\n                           :text=\"getLanguageParam(item, languageItem.value)\"\n                           :background-color=\"item.ssBgColor\"\n                           frame-img-url=\"/frames/google-pixel-4-xl-black.png\"\n                           :screen-url=\"item.ssAppUrl\"></screen-canvas>\n          </div>\n        </div>\n<!--        <span style=\"margin: 12px\">{{ getLanguageName() }}</span>-->\n<!--        <div style=\"overflow-x: auto\">-->\n<!--          <screen-canvas ref=\"canvasRefs\" v-for=\"(item, i) in pageData\" :key=\"i\"-->\n<!--              canvas-width=\"1080\" canvas-height=\"1920\"-->\n<!--              style=\"margin: 12px\"-->\n<!--              :text=\"getLanguageParam(item)\"-->\n<!--              :background-color=\"item.ssBgColor\"-->\n<!--              frame-img-url=\"/frames/google-pixel-4-xl-black.png\"-->\n<!--              :screen-url=\"item.ssAppUrl\"></screen-canvas>-->\n<!--        </div>-->\n\n\n<!--        <screen-canvas canvas-width=\"1080\" canvas-height=\"1920\"-->\n<!--                       style=\"margin: 12px\"-->\n<!--                       background-color=\"#3ba7c1\"-->\n<!--                       text=\"Update \\n your productivity\"-->\n<!--                       frame-img-url=\"/frames/google-pixel-4-xl-black.png\"-->\n<!--                       screen-url=\"https://play-lh.googleusercontent.com/TL8pKfZFU-iGKozB68b8IUYJ_riBQb7E1F55QtIqOe1PQGGm8Cydsw9lY_uvZCbwGYEn=w5120-h2880-rw\"></screen-canvas>-->\n\n\n      </el-card>\n    </div>\n\n    <el-dialog\n        title=\"Add Screenshot\"\n        :visible.sync=\"addDialogVisible\"\n        width=\"30%\">\n\n      <el-form ref=\"screenshotFrom\" :model=\"screenshotFrom\">\n        <el-form-item label=\"String ID\" prop=\"screenshot\">\n          <el-input v-model=\"screenshotFrom.transId\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Screenshot Url\" prop=\"screenshot\">\n          <el-input v-model=\"screenshotFrom.ssAppUrl\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Background Color(eg: #0000000)\" prop=\"screenshot\">\n          <el-input v-model=\"screenshotFrom.ssBgColor\"></el-input>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click=\"addDialogVisible = false\">Cancel</el-button>\n              <el-button type=\"primary\" @click=\"handAddScreenshot\">Add</el-button>\n            </span>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\n\nimport languages from \"@/store/languages\";\nimport ScreenCanvas from \"@/components/ScreenCanvas\";\nimport {getScreenshots, addScreenshots , uploadGoogle} from '../../api/screenshot'\n\nexport default {\n  components: {ScreenCanvas},\n  data() {\n    return {\n      isLoading: false,\n      addDialogVisible: false,\n      isUploadLoading: false,\n      languagesOptions: [],\n      languagesSelected: \"EN\",\n      pageData: [],\n      screenshotFrom: {\n        projectId: this.$route.params.id,\n        transId: 0,\n        ssAppUrl: '',\n        ssBgColor: ''\n      },\n\n    };\n  },\n  computed: {\n\n  },\n  watch: {\n    projectData(newVal, oldVal) {\n      if (this.$route.params.id == this.$store.state.tab.projectData.projectId) {\n        this.refreshPage()\n      }\n    },\n    languagesSelected(newVal, oldVal) {\n      if (newVal != oldVal) {\n        this.pageData = this.pageData\n      }\n    }\n  },\n  mounted() {\n    this.refreshPage()\n  },\n  methods: {\n\n    refreshPage() {\n      // 构建语言选择列表\n      const projectData = this.$store.state.tab.projectData;\n      if (this.$route.params.id != projectData.projectId) {\n        // 没有基础数据，暂时不处理\n        return\n      }\n\n      const set = []\n      projectData.languages.split(\",\").forEach((item) => {\n        set.push(item.trim())\n      });\n\n      this.languagesOptions = []\n\n      Object.keys(languages.state.allLanguages).forEach((item) => {\n        if (set.includes(languages.state.languageKey[item])) {\n          this.languagesOptions.push({\n            label: languages.state.allLanguages[item],\n            value: languages.state.languageKey[item],\n          })\n        }\n      })\n\n      const request = {\n        \"projectId\": this.$route.params.id\n      }\n      getScreenshots(request).then((data) => {\n        this.isLoading = false\n        console.log(data)\n        this.pageData = data.data\n      })\n    },\n    getLanguageParam(data, key) {\n      let result = \"\"\n      console.log(key)\n      Object.keys(languages.state.languageKey).forEach((item) => {\n        if (key === languages.state.languageKey[item]) {\n          result = data.transKeys[item]\n        }\n      })\n      return result\n    },\n    getLanguageName() {\n      return languages.state.languages[this.languagesSelected]\n    },\n    handAddScreenshot() {\n      addScreenshots(this.screenshotFrom).then((data) => {\n        console.log(data)\n        this.addDialogVisible = false\n      })\n    },\n\n    uploadGooglePlay() {\n      this.isUploadLoading = true\n      let files = new Array(this.$refs.canvasRefs.length)\n      for (let i = 0; i < this.$refs.canvasRefs.length; i++) {\n        files[i] = this.$refs.canvasRefs[i].exportImages()\n      }\n\n      let formData = new FormData()\n      Array.from(files).forEach(file => {\n        formData.append(\"files\", file)\n      })\n      formData.append(\"projectId\", this.$route.params.id)\n      formData.append(\"languages\", this.languagesSelected)\n\n      uploadGoogle(formData).then((data) => {\n        this.isUploadLoading = false\n        console.log(data)\n      })\n    },\n    formatImageUrl(data) {\n      return this.require(\"/assets/logo.png\")\n    }\n\n  },\n}\n</script>\n\n\n<style lang=\"less\" scoped>\n\n</style>","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Screenshots.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Screenshots.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Screenshots.vue?vue&type=template&id=154a145e&scoped=true&\"\nimport script from \"./Screenshots.vue?vue&type=script&lang=js&\"\nexport * from \"./Screenshots.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"154a145e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","isLoading","expression","staticClass","staticStyle","attrs","model","languagesSelected","callback","$$v","_l","languagesOptions","item","key","label","isUploadLoading","on","uploadGooglePlay","_v","$event","addDialogVisible","languageItem","_s","pageData","i","ref","refInFor","getLanguageParam","ssBgColor","ssAppUrl","screenshotFrom","transId","$set","slot","handAddScreenshot","staticRenderFns","refreshCanvas","text","props","data","methods","width","canvasWidth","height","canvasHeight","canvas","$refs","screenCanvas","setAttribute","style","getContext","ctx2d","fillStyle","backgroundColor","fillRect","phoneFrame","path","frameImgUrl","x","y","startX","startY","endX","endY","extraY","phoneFrameToPrevScale","split","beginPath","textAlign","upHeight","length","font","fillText","closePath","screenImg","Image","crossOrigin","src","screenUrl","onload","scale","Math","max","drawImage","frameImg","exportImages","dataURL","toDataURL","canvasBlob","dataURLtoBlob","fileOfBlob","File","Date","getTime","dataurl","arr","_arr","substring","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","type","mounted","component","getScreenshots","http","post","addScreenshots","uploadGoogle","config","headers","postForm","components","ScreenCanvas","projectId","$route","params","id","computed","watch","projectData","newVal","oldVal","$store","state","tab","refreshPage","set","languages","forEach","push","trim","Object","keys","allLanguages","includes","languageKey","request","then","console","log","result","transKeys","getLanguageName","files","Array","canvasRefs","formData","FormData","from","file","append","formatImageUrl","require"],"sourceRoot":""}